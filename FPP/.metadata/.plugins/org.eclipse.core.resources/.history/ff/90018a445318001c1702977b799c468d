package prog10_2;

import java.util.Objects;

public class Rational {
	private int p;
	private int q;
	
	public Rational(int nume, int deno) {
		if (!(deno > 0)) throw new IllegalArgumentException("Illegal argument q");
		this.p = nume;
		this.q = deno;
	}
	
	public Rational add(Rational rat) {
		int r = rat.p;
		int s = rat.q;
		return new Rational((p * s) + (r * q), q * s);
	}
	
	public Rational multiply(Rational rat) {
		int r = rat.p;
		int s = rat.q;
		return new Rational(p * r, q * s);
	}
	
	public int compareTo(Rational rat) {
		int r = rat.p;
		int s = rat.q;
		if ((p * s) < (q * r)) return -1;
		else if ((p * s) > (q * r)) return 1;
		else return 0;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		Rational rat = (Rational) obj;
		return p * rat.q == q * rat.p;
	
	}
	
	@Override
	public int hashCode() {
		return Objects.hash(p, q);
	}
	
	@Override
	public String toString() {
		return String.format("%s/%s", p, q);
	}
	
	public static void main(String[] args) {
		Rational rat = new Rational((2/3 * -17/5) + 1/3, 2/3 * (-17/5 + 1/3));
		System.out.println(rat);
	}

}
